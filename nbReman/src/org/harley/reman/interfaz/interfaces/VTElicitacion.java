/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.harley.reman.interfaz.interfaces;

import java.awt.event.*;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.tree.TreePath;
import org.harley.reman.interfaz.utilitario.ToolsInterface;
import org.harley.reman.sistema.Sistema;

/**
 *
 * @author User
 */
public class VTElicitacion extends javax.swing.JInternalFrame {

    Sistema sysReman;
    TreePath dirTree;
    JFrame padre;
    MouseListener ml = new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            // Se obtiene el path para esa fila. Con el path podemos obtener
            // los nodos.
            if (e.getButton() == MouseEvent.BUTTON3) {
                dirTree = treeEli.getPathForLocation(e.getX(), e.getY());
                treeEli.setSelectionPath(dirTree);
                if (dirTree != null) {
                    switch (dirTree.getLastPathComponent().toString()) {
                        case "Documento de Elicitación":
                            break;
                        case "Elicitación":
                            menuDocEli.show(e.getComponent(), e.getX(), e.getY() + 10);
                            break;
                        default:
                            menuEli.show(e.getComponent(), e.getX(), e.getY() + 10);
                            break;
                    }
                }
            }
        }
    };

    public VTElicitacion(JFrame padre, Sistema sysReman, JTree tree) {
        initComponents();
        this.padre = padre;
        this.sysReman = sysReman;
        treeEli.setModel(tree.getModel());
        treeEli.addMouseListener(ml);
    }
    
    public VTElicitacion(JFrame padre, Sistema sysReman) {
        initComponents();
        this.padre = padre;
        this.sysReman = sysReman;
        treeEli.addMouseListener(ml);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuDocEli = new javax.swing.JPopupMenu();
        menuDocEliItem1 = new javax.swing.JMenuItem();
        menuDocEliItem2 = new javax.swing.JMenuItem();
        menuEli = new javax.swing.JPopupMenu();
        menuEliItem1 = new javax.swing.JMenuItem();
        menuEliItem2 = new javax.swing.JMenuItem();
        menuEliItem3 = new javax.swing.JMenuItem();
        ExportarFile = new javax.swing.JFileChooser();
        scrollTree = new javax.swing.JScrollPane();
        treeEli = new javax.swing.JTree();

        menuDocEliItem1.setText("Crear Elicitación");
        menuDocEliItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDocEliItem1ActionPerformed(evt);
            }
        });
        menuDocEli.add(menuDocEliItem1);

        menuDocEliItem2.setText("Exportar a pdf");
        menuDocEliItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDocEliItem2ActionPerformed(evt);
            }
        });
        menuDocEli.add(menuDocEliItem2);

        menuEliItem1.setText("Modificar");
        menuEliItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEliItem1ActionPerformed(evt);
            }
        });
        menuEli.add(menuEliItem1);

        menuEliItem2.setText("Eliminar");
        menuEliItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEliItem2ActionPerformed(evt);
            }
        });
        menuEli.add(menuEliItem2);

        menuEliItem3.setText("Restaurar");
        menuEliItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEliItem3ActionPerformed(evt);
            }
        });
        menuEli.add(menuEliItem3);

        ExportarFile.setDialogType(javax.swing.JFileChooser.CUSTOM_DIALOG);
        ExportarFile.setDialogTitle("Seleccione");

        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(250, 322));

        treeEli.setBackground(new java.awt.Color(217, 221, 255));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Documento de la Educción");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Educción");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("EDU 0001");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeEli.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        scrollTree.setViewportView(treeEli);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollTree, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollTree, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuDocEliItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDocEliItem1ActionPerformed
        //NUEVA ELICITACION
        VCElicitacion VEli = new VCElicitacion(padre, sysReman);
        if (VEli.getLoadIsCorrect()) {
            VEli.setVisible(true);
        } else {
            ToolsInterface.msjError(padre, "Error al cargar los actores del proyecto!");
        }
        if (VEli.createSuccessful()) {
            actualizarJTree();
        }    
        
    }//GEN-LAST:event_menuDocEliItem1ActionPerformed

    private void menuEliItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEliItem1ActionPerformed
        //MODIFICAR ELICITACION
        String path = dirTree.getLastPathComponent().toString();
        VMElicitacion VEli = new VMElicitacion(padre, sysReman, path);
        if (VEli.getLoadIsCorrect()) {
            VEli.setVisible(true);
        } else {
            ToolsInterface.msjError(padre, "Error al cargar los datos de los actores!");
        }
    }//GEN-LAST:event_menuEliItem1ActionPerformed

    private void menuEliItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEliItem2ActionPerformed
        //ELIMINAR ELICITACION
        String path;
        int resp = JOptionPane.showConfirmDialog(null, "Eliminar Elicitacion", "Alerta!", JOptionPane.YES_NO_OPTION);
        if (resp == 0) {
            path = dirTree.getLastPathComponent().toString();
            sysReman.eliminarElicitacion(path);
            actualizarJTree();
            ToolsInterface.msjInfo(padre, "Eliminacion Exitosa", "Se elimino correctamente la Elicitacion: " + path);
        } 
    }//GEN-LAST:event_menuEliItem2ActionPerformed

    private void menuEliItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEliItem3ActionPerformed
        //RESTAURAR ELICITACION
        String path = dirTree.getLastPathComponent().toString();
        VOERestaurar vRes = new VOERestaurar(padre, sysReman, path, Sistema.LIB_ELI);
        if(vRes.getLoadIsCorrect()){
            vRes.setVisible(true);
        }else{
            ToolsInterface.msjError(padre, "Error al cargar las versiones de la educcion!");
        }
    }//GEN-LAST:event_menuEliItem3ActionPerformed

    private void menuDocEliItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDocEliItem2ActionPerformed
        //EXPORTAR ELICITACION
        int opt = ExportarFile.showSaveDialog(this);
        String direccion;
        String nombre;
        if (opt == JFileChooser.APPROVE_OPTION) {
            direccion = ExportarFile.getSelectedFile().getParent();
            nombre = ExportarFile.getSelectedFile().getName();
            nombre = ToolsInterface.addExtensionPdf(nombre);
            if(!nombre.equals("error")){
                if(!sysReman.exportarLibro(Sistema.LIB_ELI,direccion, nombre)){
                    ToolsInterface.msjError(padre, "Error al cargar los datos, reviselos antes de continuar la operacion!");
                }
            }else{
                ToolsInterface.msjError(padre, "Error con el nombre del archivo, intentelo nuevamente!");
            }   
        }
    }//GEN-LAST:event_menuDocEliItem2ActionPerformed

    public void actualizarJTree(){
        JTree model = ToolsInterface.generateJTreeBook("Documento de Elicitación", "Elicitación", sysReman.getDirPrincipal() + "\\src\\eli");
        treeEli.setModel(model.getModel());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser ExportarFile;
    private javax.swing.JPopupMenu menuDocEli;
    private javax.swing.JMenuItem menuDocEliItem1;
    private javax.swing.JMenuItem menuDocEliItem2;
    private javax.swing.JPopupMenu menuEli;
    private javax.swing.JMenuItem menuEliItem1;
    private javax.swing.JMenuItem menuEliItem2;
    private javax.swing.JMenuItem menuEliItem3;
    private javax.swing.JScrollPane scrollTree;
    private javax.swing.JTree treeEli;
    // End of variables declaration//GEN-END:variables
}
